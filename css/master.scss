body {
    background: #000;
    color: #d6d6d6;
}

h1 {margin-bottom: 30px;}

svg path {
    fill: #fff;
    transition: .5s ease;
}

section {
    margin-bottom: 30px;
    position: relative;
    &:before {
        position: absolute;
        content: "";
        left: -8px;
        top: -8px;
        width: 0%;
        height: 0%;
        visibility:hidden;
        border: solid red;
        border-width: 1px 0 0 1px;
        box-shadow: -1px 0px red;
        transition:2s ease;
    }
    &.visible:before {
        position: absolute;
        visibility: visible;
        content: "";
        left: -19px;
        top: -8px;
        width: calc(100% + 55px);
        height: 109%;
        border: solid red;
        border-width: 1px 0 0 1px;
        box-shadow: -1px 0px red;
    }
}

.mobile-burger {
    display: none;
    z-index: 99;
}

.clickable {
    cursor: pointer;
}

.container.grid {
    display: grid;
    grid-template-columns: 1fr 2fr 1fr;
    max-width: 960px;
}

.main-container {
    background: url(../img/tooth-02-02.png) repeat-y;
    padding: 50px 0 0 50px;
    background-size: 6.2%;
    background-position-y: 16px;
    animation: gearUp 2s .7s backwards cubic-bezier(0.25, 0.1, 0.45, 1.29);
    position: relative;
    z-index: 1;
}

.gear-box {
    position: relative;
    right: -10px;
    .sticky {
        right: -12px;
        top: 50px;
        position: sticky;
        perspective: 2000px;
    }
    svg {
        width: 100%;
        overflow:unset;
        animation: zoomIn .6s backwards ease;
    }
}

.cw, .ccw {
    transform-origin: center;
}

img {
    max-width: 100%;
}

.slide-out {
    background: #000;
    position: absolute;
    top: 0;
    height: 86%;
    color: #fff;
    width: 100%;
    left: 0px;
    box-shadow: inset 0 0 0 2px;
    z-index: -2;
    text-align: right;
    padding: 15px 15px 15px calc(44% + 5px);
    transition: 2s cubic-bezier(0.25, 0.1, 0.71, 1.28);
    &.visible {
        left: 56%;
    }
}
.project-box {
    position: relative;
}

.project {
    position: relative;
    cursor: pointer;
    &:after {
        content: url(../img/side-gear-03.png);
        position: absolute;
        bottom: -46px;
        right: -38px;
        z-index: -1;
        transform: rotate(8deg);
        transition: 2s cubic-bezier(0.25, 0.1, 0.71, 1.28);
    }
    h3 {
        position: absolute;
        background: #00000078;
        width: 100%;
        top: 46%;
        text-align: center;
        padding: 10px 0 14px;
        margin: 0;
        line-height: 1;
        text-transform: uppercase;
    }
    &.roll:after {
        transform: rotate(418deg);
    }
}
.slide-out:after {
    background: url(../img/tooth-02-02.png) repeat-x;
    content: "";
    position: absolute;
    left: 0;width: 100%;
    height: 14%;
    top: 99%;
    z-index: -3;
    box-shadow: inset 0 2px;
}

.move .main-container h1, .move .main-container .main {
    opacity: 0.2;
}

.main-container h1, .main-container .main {
    transition: .5s ease;
}

.project-grid {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-gap: 1em;
}





section#intro p {
    padding-right: 20px;
}



// #Gears > g > g {
//     transition: .5s ease;
// }

@for $i from 1 through 9 {
    $delay : $i/12 + 2 ;
    #Gears > g > g:nth-of-type(#{$i}):not([id^='link-']){
        animation: slideInLeft 0.5s #{$delay}s backwards cubic-bezier(0.25, 0.1, 0.45, 1.29);

    }
}

@for $i from 1 through 7 {
    $delay : $i/13 + 2.5;
    // polygon#start-#{$i} {
    polygon:nth-of-type(#{$i}){
        animation: flickerIn 1.5s #{$delay}s backwards, flickerInStroke 1.5s #{$delay}s backwards reverse;
    }
}
@mixin flickerTransition1 {
    @for $i from 1 through 7 {
        polygon#start-#{$i}{
            $delay : $i/13;
            animation: flickerTrans1 .2s #{$delay}s backwards, flickerTransStroke1 .5s #{$delay}s backwards reverse;
        }
    }
}
@mixin flickerTransition2 {
    @for $i from 1 through 7 {
        polygon#start-#{$i}{
            $delay : $i/13;
            animation: flickerTrans2 .2s #{$delay}s backwards, flickerTransStroke2 .5s #{$delay}s backwards reverse;
        }
    }
}
@mixin flickerTransition3 {
    @for $i from 1 through 7 {
        polygon#start-#{$i}{
            $delay : $i/13;
            animation: flickerTrans3 .2s #{$delay}s backwards, flickerTransStroke3 .5s #{$delay}s backwards reverse;
        }
    }
}
@mixin flickerTransition4 {
    @for $i from 1 through 7 {
        polygon#start-#{$i}{
            $delay : $i/13;
            animation: flickerTrans4 .2s #{$delay}s backwards, flickerTransStroke4 .5s #{$delay}s backwards reverse;
        }
    }
}
@mixin flickerTransition5 {
    @for $i from 1 through 7 {
        polygon#start-#{$i}{
            $delay : $i/13;
            animation: flickerTrans5 .2s #{$delay}s backwards, flickerTransStroke5 .5s #{$delay}s backwards reverse;
        }
    }
}

.social-menu {
    padding: 150px 50px;

    svg{
        position: sticky;
        top:150px;

    }

    .code {
        @include flickerTransition1;

        #start-1 {
            fill: #fff;
        }
    }
    .intro {
        @include flickerTransition2;
        #start-1 {
            fill:transparent;
        }
    }
    .web-design {
        @include flickerTransition3;
        #start-1, #start3 {
            fill:#fff;
        }
        #start-7 {
            fill:transparent;
        }
    }
    .art {
        @include flickerTransition4;
        #start-1 {
            fill:#fff;
            transform:translateX(50%);
        }
        #start-5 {
            fill:#fff;
        }
    }
    .lighting {
        @include flickerTransition5;
        #start-3 {
            fill:transparent;
        }
    }
}


@keyframes slideInLeft {
    from{
        opacity: 0;
        transform: translateX(-900px);
    }
    to {
        opacity:1;
        transform: translateX(0);
    }

}

@keyframes zoomIn {
    from {
        transform: translate3d(100px, 0px, 2000px);
    }
    to {
        transform: translate3d(0px, 0px, 0px);
    }
}


@keyframes flickerIn {
    0%{
  	fill:black;
    }
    19%{
  	fill: black;
    }
    21%{
  	fill: #ffffff75;
    }
    25%{
  	fill: #ffffff75;
    }
    25%{
        fill: black;
    }
    80%{
    fill: #000;
    }
    81%{
    fill: #ffffff75;
    }
    82%{
    fill: #000;
    }
    98%{
        fill:black
    }
    99%{
        fill:white
    }
    100%{
        fill:black;
    }
}
@keyframes flickerInStroke {
    0%{
 	stroke:black;
   }
   56%{
       stroke: black;
   }
   58%{
       stroke: red;
   }
   61%{
       stroke: red;
   }
   64%{
       stroke: black;
   }
   73%{
       stroke: black;
   }
   75%{
       stroke: red;
   }
   79%{
       stroke: red;
   }
   81%{
       stroke: black;
   }
   100%{
       stroke: black;
   }
}

@for $i from 1 through 5{
    @keyframes flickerTrans#{$i} {
        0%{
            fill:transparent;
        }
        19%{
            fill: transparent;
        }
        21%{
            fill: #ffffff75;
        }
        25%{
            fill: #ffffff75;
        }
        25%{
            fill: transparent;
        }
        80%{
            fill: transparent;
        }
        81%{
            fill: #ffffff75;
        }
        82%{
            fill: transparent;
        }
        98%{
            fill: transparent;
        }
        99%{
            fill:white;
        }
        100%{
            fill:transparent;
        }
    }
    @keyframes flickerTransStroke#{$i} {
        0%{
            stroke:transparent;
        }
        56%{
            stroke: transparent;
        }
        58%{
            stroke: red;
        }
        61%{
            stroke: red;
        }
        64%{
            stroke: transparent;
        }
        73%{
            stroke: transparent;
        }
        75%{
            stroke: red;
        }
        79%{
            stroke: red;
        }
        81%{
            stroke: transparent;
        }
        100%{
            stroke: transparent;
        }
    }
}


$gears: (
    16 : 12,
    12 : 12,
    // 8 : 12,
    // 6 : 12,
);

@each $self, $driver in $gears {
    $calc : 520 / (.966 * $self / $driver);
    g.ccw[data-driver='#{$driver}'][data-self='#{$self}'] {
        animation:slideInLeft 0.5s backwards cubic-bezier(0.25, 0.1, 0.45, 1.29), introRotateCCW#{$driver}#{$self} 2s 0.7s cubic-bezier(0.25, 0.1, 0.45, 1.29);
    }

    @keyframes introRotateCCW#{$driver}#{$self} {
        from {
            transform:rotate($calc + deg);
        }
        to {
            transform:rotate(0deg);
        }
    }
}
@each $self, $driver in $gears {
    $calc : -520 / (.966 * $self / $driver);
    g.cw[data-driver='#{$driver}'][data-self='#{$self}'] {
        animation:slideInLeft 0.5s backwards cubic-bezier(0.25, 0.1, 0.45, 1.29), introRotateCW#{$driver}#{$self} 2s 0.7s cubic-bezier(0.25, 0.1, 0.45, 1.29);
    }

    @keyframes introRotateCW#{$driver}#{$self} {
        from {
            transform:rotate($calc + deg);
        }
        to {
            transform:rotate(0deg);
        }
    }
}

@for $i from 1 through 4 {
    #Gears > g > g[id^='link-']:nth-of-type(#{$i}) {
        animation-delay: $i / 10 + s, .7s;
    }
}
@keyframes gearUp {
    from {
        opacity: 0;
        margin-top: 520px;
    }
    to {
        opacity: 1;
        margin-top: 0;
    }

}



@media screen and (max-width:768px) {
    .container.grid {
        grid-template-columns: 1fr 2fr;
    }

    .project-box {
        overflow: hidden;
    }

    .slide-out {
        top: 100%;
        height: 100%;
        z-index: 1;
        width: 86%;
        padding: 20px;
    }

    .slide-out:after {
        background-repeat: repeat-y;
        width: 14%;
        height: 100%;
        left: 99%;
        top: 0;
    }

    .project:after{
        z-index:1;
    }
    .slide-out.visible {
        top: 0;
        left: 0;
    }
}

@media screen and (max-width:525px){

    body {
        overflow-x: hidden;
    }

    .container.grid {
        grid-template-columns: 1fr;
        transition: .5s ease;
        position: relative;
        left: 0;
        &.move {
            left: 232.5px;
        }
    }

    .mobile-burger {
        display: block;
        position: fixed;
        left: 67px;
        font-size: 36px;
        transition: .5s ease;
    }
    .gear-box {
        position: fixed;
        width: 232.5px;
        left: -232.5px;
        transition: .5s ease;
    }

    .move {
        .gear-box {
            left: 25px;
            height: 100vh;
            overflow: auto;
        }
        .mobile-burger {
            left: 299.5px;
        }
    }


}
